The Developers Guide To Learning Effectively

1) You don't learn like you think you do
2) What we call "learning" is a bunch of...
3) Brain overloading is actually good for you.

Experience vs. Education
-Are we learning theory, knowledge, or skill?

Resouce (book): Theory of Action - A set of assumptions we have and actions we can perform in order to achieve a goal.

Governing Variables: The constraints we operate under when using our theory of action.

2 Changes in theory of action: 
- Slight improvements as we learn
- Huge changes brought on by delimmas we face due to our theories

Delimma 1: Actions don't meet the theories that we believe
Delimma 2: Contraining variables can no longer be satisfied
Delimma 3: When our actions change the world around us, but they change the world around so much that our theory no long works

SINGLE LOOP LEARNING
Theory of Action -> Actions we choose -> Observe & Adjust Theory

DOUBLE LOOP LEARNING
Theory of Action -> Actions we choose -> Observe & Adjust Action and Theory

*Action is a theory of believe, allow you self to change belief on reality.

1. Think about what you are doing! 
	-Be able to describe theory (why do you do the things you do?)
	-Try things to disprove your assumptions
	-TDD style when building theory

	Skill - A measure of your ability to behave effectively in situations of action.

	Types of Knowledges:

	Explicit Knowledge - can be articulated,
	Implicite Knowledge - not explicit but could be articulated and codified with effort,
	Tacit Knowledge - cannot be articulated

2. Keep learning loops short!
	-Cause & Effect (the further apart they are, the hard it is to learn)
	-Keep test run shorts
	-Codewars
	-Limit work in progress

	Explicit Memory - Memeory you know you know (Semantic & Episodic)

3. Keep an open mind and explore!
	-Continue to be curious 
	-You learn faster when you are suprised (so set up experiments)
	-Allow yourself to go on explorative tangets
	-Budget time for these curiosities

	Implicit Memory - Things you don't necessarily have readily available as memory.

4. Seek guided learning to exploit zone of proximal development
	-Find a mentor
	-Listen to other people
	-Watching peer reviews or have group peer reviews
	-Be mindful and listen to implicit memory

	Myelination - Basically muscle memory.

	Neuroplasticity & Neurogenesis - DRYing things up, the more time you spend doing things, your brain wires itself to better do those things.

	*Intentional learning usually promotes evaluating our own success.

5. Step outside of your comfort zones when learning
	-Know what mental effort feels like, rest, reset, repeat!
	-Try switching context for a quick rest
	-Catch yourself taking the easy way out.

	"Always do what you are afraid to do."   -Emerson

	Reasons to step out of comfort:
		1 - Resting in comfort zones breeds holy wars.
		2 - Don't get caught in "local maximums"
		3 - Learning things allows us to keep learning as we age.
		4 - Allows you to relate to other things in life.
		5 - There is simply too much information out there, so get used to it.

6. Sense and destroy your fear of loss of time
	-Take time to learn keyboard shortcuts
	-Play with the command line
	-Automate things with gulp, webpack, browserify
	-Express things differently (draw things out, write it out by hand, print it out and restructure)

7. Explain to other people what you've learned
	-Blogging
	-Give a talk
	-Maybe just verbalize your problem out loud

	*We have to be good at learning and knowing what we need to learn.